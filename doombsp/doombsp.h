#ifndef DOOMBSP_H
#define DOOMBSP_H

#include <math.h>
#include "cmdlib.h"
//#include "wad.h"
#include "line.h"
#include "doomdata.h"
#include "array.h"
#include "next.h"

#define PI	3.141592657


// -----------------------------------------------------------------------------
// doombsp Types

typedef	struct
{
	NXPoint	pt;
    float	dx;
    float   dy;
} divline_t;

typedef struct bspstruct_s
{
	Array *				    lines_i;		// if non NULL, the node is
	divline_t				divline;		// terminal and has no children
	float					bbox[4];
	struct bspstruct_s		*side[2];
} bspnode_t;

typedef struct
{
	NXPoint		p1, p2;
    int			linedef; // index into linestore_i
    int         side; // 0 = front, 1 = back
    int         offset; // End of the segment.
	boolean		grouped; // internal error check
} line_t; // This is really a segment!


// -----------------------------------------------------------------------------
// doombsp

//extern	Wad *	    wad_i;
extern	boolean		draw;


// -----------------------------------------------------------------------------
// doomload
// TODO: remove doomload.c
extern	Array	*linestore_i, *thingstore_i;

void NodeBuilderLoadMap(void);
//void LoadDoomMap (char *mapname);


// -----------------------------------------------------------------------------
// drawing

extern SDL_Window * nbWindow;
extern SDL_Renderer * nbRenderer;
extern SDL_Texture * nbTexture;

//extern	float	scale;
extern	NXRect		worldbounds;

void NB_DrawLine(float x1, float y1, float x2, float y2);
void NB_Refresh(int delayMS);
void EraseWindow (void);
void NodeBuilderDrawMap (void);
void DrawLineStore (Array * lines_i);
void DrawDivLine (divline_t *div);
void DrawLineDef (maplinedef_t *ld);


// -----------------------------------------------------------------------------
// buildbsp

extern	int		cuts;			// number of new lines generated by BSP process
extern	bspnode_t	*startnode;

void BuildBSP (void);
void DivlineFromWorldline (divline_t *d, line_t *w);
int	PointOnSide (NXPoint *p, divline_t *l);


// -----------------------------------------------------------------------------
// savebsp

extern	Array * secstore_i;
extern	Array * mapvertexstore_i;
extern	Array * subsecstore_i;
extern	Array * maplinestore_i;
extern	Array * nodestore_i;
extern	Array * mapthingstore_i;
extern	Array * ldefstore_i;
extern	Array * sdefstore_i;

void SaveDoomMap (void);


// -----------------------------------------------------------------------------
// saveblocks

void SaveBlocks (void);


// -----------------------------------------------------------------------------
// savesectors

void ProcessSectors (void);
void BuildSectordefs (void);

// -----------------------------------------------------------------------------
// saveconnect

void ProcessConnections (void);
void OutputConnections (void);

// -----------------------------------------------------------------------------
// doombsp

void DoomBSP(void);

#endif /* DOOMBSP_H */
